# name: Azure Deployment

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy_module:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Install Azure CLI
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y curl
#           curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

#       - name: Login to Azure
#         run: |
#           az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
#           az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

#       - name: Deploy to Azure
#         run: |
#           az deployment group create --template-file ./Bicep/AKS/main.bicep --parameters ./Bicep/AKS/main.bicepparam --resource-group rg-aks-rcs

#   deploy_function_app:
#     runs-on: ubuntu-latest
#     needs: deploy_module
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Get Function App Publish Profile
#         id: get-publish-profile
#         run: |
#           az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
#           az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#           az functionapp deployment list-publishing-credentials --name AKS-RCS-PS1 --resource-group rg-aks-rcs --query publishingUserName --output tsv
#           echo "##[set-output name=FUNCTIONAPP_PUBLISH_USER;]$(az functionapp deployment list-publishing-credentials --name AKS-RCS-PS1 --resource-group rg-aks-rcs --query publishingUserName --output tsv)"

#       - name: Deploy Code to Function App
#         run: |
#           az functionapp deployment source config-zip \
#           --resource-group rg-aks-rcs \
#           --name AKS-RCS-PS1 \
#           --src ./Scripts/PS1.zip

#   deploy_to_aks:
#     runs-on: ubuntu-latest
#     needs: deploy_module
#     strategy:
#       matrix:
#         cluster:
#           - name: "cluster1"
#             resource-group: "aks-rcs-rg"
#             aks-name: "AKS-Cluster-01"
#           - name: "cluster2"
#             resource-group: "aks-rcs-rg"
#             aks-name: "AKS-Cluster-02"

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Install Azure CLI
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y curl
#           curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

#       - name: Login to Azure
#         run: |
#           az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
#           az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

#       - name: Deploy to AKS
#         run: |
#           az aks get-credentials --resource-group ${{ matrix.cluster.resource-group }} --name ${{ matrix.cluster.aks-name }}
#           kubectl apply -f AKS-RCS/.github/workflows/aks-manifest.yaml
